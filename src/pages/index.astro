---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import HeroSection from "@/components/HeroSection";
import AchievementsCard from "@/components/AchievementsCard";
import Aurora from "@/components/Aurora";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import type { Button, Feature } from "@/types";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { FaCheck } from "react-icons/fa";

interface Homepage {
  banner: {
    title: string;
    content: string;
    image: string;
    button: Button;
  };
  features: Feature[];
}

const homepage = (await getEntry(
  "homepage",
  "-index",
)) as CollectionEntry<"homepage">;

const call_to_action = (await getEntry(
  "ctaSection",
  "call-to-action",
)) as CollectionEntry<"ctaSection">;

const { banner, features } = homepage.data as Homepage;

// Define achievements data
const achievements = [
  {
    icon: "üèÜ",
    title: "2024 Neubauer Fellowship",
    description:
      "Selected as a prestigious fellow recognizing exceptional educational leadership in Philadelphia schools.",
    category: "Recognition",
    value: "2024",
  },
  {
    icon: "üí∞",
    title: "Grant Leadership",
    description:
      "Secured and managing $2.2M+ in competitive grants powering sustainable agricultural innovation.",
    category: "Funding",
    value: "$2.2M+",
  },
  {
    icon: "üéì",
    title: "Student Engagement",
    description:
      "Hub-and-spoke model serving 50,000+ student visits across 60+ schools each year.",
    category: "Impact",
    value: "50K+",
  },
  {
    icon: "üå±",
    title: "Farm Stewardship",
    description:
      "Managing the largest urban public school district-operated educational farm in the United States.",
    category: "Leadership",
    value: "112 Acres",
  },
  {
    icon: "üë•",
    title: "Educator Development",
    description:
      "Launching Agriculture Innovations Academy to certify 100+ teachers in agricultural literacy.",
    category: "Education",
    value: "100+ Teachers",
  },
  {
    icon: "üî¨",
    title: "CEA Pipeline",
    description:
      "Leading Philadelphia's first district-wide Controlled Environment Agriculture pre-apprenticeship programs.",
    category: "Innovation",
    value: "First in PA",
  },
];
---

<Base
  title="Dr. Mandy Manna - Educational Leader & Agricultural Innovation Expert"
  meta_title="Dr. Mandy Manna - Portfolio"
  description="Educational leader transforming urban agriculture through innovative experiential learning. Farm Administrator at Fox Chase Farm, managing the largest public school district-run educational farm in the United States."
  image="/images/manna.webp"
>
  <!-- Aurora Background -->
  <Aurora
    colorStops={["#3A29FF", "#FF94B4", "#FF3232"]}
    blend={0.1}
    amplitude={0.8}
    speed={0.3}
    client:load
  />

  <!-- Hero Section -->
  <HeroSection
    title={banner.title}
    subtitle="Farm Administrator | Educational Leader | Agricultural Innovation Expert"
    description={banner.content}
    imageUrl={banner.image}
    ctaText={banner.button.enable ? banner.button.label : undefined}
    ctaUrl={banner.button.enable ? banner.button.link : undefined}
    client:load
  />

  <!-- Achievements Section -->
  <AchievementsCard achievements={achievements} client:load />

  <!-- Features -->
  {
    features.map((feature, index: number) => (
      <section
        class={`py-16 ${index % 2 === 0 ? "bg-gray-50 dark:bg-slate-800" : "bg-white dark:bg-slate-900"}`}
      >
        <div class="container max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <div class={index % 2 !== 0 ? "lg:order-2" : ""}>
              <div class="relative">
                <div class="absolute inset-0 bg-gradient-to-r from-blue-400/20 to-cyan-400/20 rounded-2xl blur-3xl" />
                <ImageMod
                  src={feature.image}
                  height={480}
                  width={520}
                  alt={feature.title}
                  format="webp"
                  class="relative rounded-2xl shadow-lg"
                />
              </div>
            </div>
            <div class={index % 2 !== 0 ? "lg:order-1" : ""}>
              <h2
                set:html={markdownify(feature.title)}
                class="text-3xl font-bold text-gray-900 dark:text-white mb-6"
              />
              <p
                set:html={markdownify(feature.content)}
                class="text-lg text-gray-600 dark:text-gray-300 mb-8 leading-relaxed"
              />
              <div class="space-y-4">
                {feature.bulletpoints.map((bullet: string) => (
                  <div class="flex items-start space-x-3">
                    <div class="flex-shrink-0 w-6 h-6 bg-blue-100 dark:bg-blue-900/20 rounded-full flex items-center justify-center mt-0.5">
                      <FaCheck className="w-3 h-3 text-blue-600 dark:text-blue-400" />
                    </div>
                    <span
                      set:html={markdownify(bullet)}
                      class="text-gray-700 dark:text-gray-300"
                    />
                  </div>
                ))}
              </div>
              {feature.button.enable && (
                <a
                  class="inline-flex items-center mt-8 px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-500 transition-colors duration-200"
                  href={feature.button.link}
                >
                  {feature.button.label}
                  <svg
                    class="ml-2 w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M17 8l4 4m0 0l-4 4m4-4H3"
                    />
                  </svg>
                </a>
              )}
            </div>
          </div>
        </div>
      </section>
    ))
  }
  <!-- /Features -->

  <CallToAction call_to_action={call_to_action} />
</Base>
